


create table activity_description
(
    id          int auto_increment
        primary key,
    description varchar(200) not null
);

create table activity
(
    id              int auto_increment
        primary key,
    description_id  int            not null,
    name            varchar(45)    not null,
    duration        varchar(45)    not null,
    reward          decimal(10, 1) not null,
    taken_by        int default 0  not null,
    requested_times int default 0  not null,
    constraint fk_activity_activity_description1
        foreign key (description_id) references activity_description (id)
);

create index fk_activity_activity_description1_idx
    on activity (description_id);

create table role
(
    id   int auto_increment
        primary key,
    role varchar(45) default 'Role_user' not null
);

create table user
(
    id                int auto_increment
        primary key,
    name              varchar(45)   not null,
    password          varchar(200)  not null,
    email             varchar(45)   null,
    activities_amount int default 0 not null,
    requests_amount   int           not null,
    status            varchar(45)   not null,
    total_points      int default 0 not null,
    constraint email_UNIQUE
        unique (email),
    constraint name_UNIQUE
        unique (name)
);

create table user_has_activity
(
    user_id     int                              not null,
    activity_id int                              not null,
    status      varchar(45)  default 'requested' not null,
    time_spent  varchar(100) default ''          not null,
    primary key (user_id, activity_id),
    constraint fk_user_has_activity_activity1
        foreign key (activity_id) references activity (id),
    constraint fk_user_has_activity_user1
        foreign key (user_id) references user (id)
);

create index fk_user_has_activity_activity1_idx
    on user_has_activity (activity_id);

create index fk_user_has_activity_user1_idx
    on user_has_activity (user_id);

create table user_role
(
    user_id int not null,
    role_id int not null,
    primary key (user_id, role_id),
    constraint fk_user_has_role_role1
        foreign key (role_id) references role (id),
    constraint fk_user_has_role_user1
        foreign key (user_id) references user (id)
);

create index fk_user_has_role_role1_idx
    on user_role (role_id);

create index fk_user_has_role_user1_idx
    on user_role (user_id);

